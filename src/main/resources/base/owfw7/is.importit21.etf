EasyCASE=SPX V6.8
ShortInfo;
EndShortInfo;
Options;
EndOptions;
Level=0
Text;
Line=owjava/IS.IMPORTIT21
EndText;
LevelBody;
Level=0
Text;
Line=kopf
EndText;
LevelBody;
Text;
Line=.SETZE Trans -
Line=..@@BEGINHEAD
Line=..========================================================================
Line=..==
Line=..==  Name              : IS.IMPORTIT21
Line=..==
Line=..==  Pfad              :  owjava
Line=..==
Line=..==  Funktion          : 
Line=..==                      
Line=..==
Line=..==  Erstellungsdatum  :  14.11.2013
Line=..==
Line=..==  Autor             : ABAS Projektierung GmbH <TK>
Line=..==                      
Line=..==  Menuepunkte       : 
Line=..==
Line=..==  Maskenprioritaet
Line=..==  bei EFOP          : 
Line=..==
Line=..==  Besonderheiten    : 
Line=..==                      
Line=..==
Line=..==
Line=..include owjava/importitnew21java.tgz
Line=..==
Line=..==  Aenderungshistorie: 
Line=..==
Line=..========================================================================
Line=..@@ENDHEAD
EndText;
EndLevel;
Level=0
Text;
Line=standard programs
EndText;
LevelBody;
Text;
Line=.EINGABE ARB
Line=..
Line=.EINGABE DEFAULT.INI
EndText;
EndLevel;
Level=0
Text;
Line=variable definitions
EndText;
LevelBody;
Text;
Line=..@@BEGINVARDEFS
Line=..====================================================
Line=..... procedure stack pointer .....
Line=.ART integer    xprocsp                 ? _defined(xprocsp)
Line=.ART integer    xIdummy                 ? _defined(xIdummy)
Line=.ART text       xTdummy                 ? _defined(xTdummy)
Line=.ART real       xRdummy                 ? _defined(xRdummy)
Line=.ART text       xTsystem                ? _defined(xTsystem)
Line=.ART integer    xizaehl                 ? _defined(xizaehl)
Line=.ART integer    xianzkopffeld           ? _defined(xianzkopffeld)
Line=.ART text       xtueber                 ? _defined(xtueber)
Line=.ART text       xtsel                     ? _defined(xtsel)
Line=.ART text       xtkommd              ? _defined(xtkommd)
Line=.ART text       xtdatei                  ? _defined(xtdatei)
Line=.ART bool      xbfehler                ? _defined(xbfehler)
EndText;
Block;
Text;
Line=BOOLsche - Variablen
EndText;
BlockBody;
Text;
Line=.ART bool       xBmehr  ? _defined(T|xBmehr)
EndText;
EndBlock;
Block;
Text;
Line=REAL - Variablen
EndText;
BlockBody;
Dummy;
EndBlock;
Text;
Line=.ART text xtjavadat  ? _defined(U|xtjavadat)
Line=.ART text xtjavaclass ? _defined(U|xtjavaclass)
Line=.ART text xtclasspathzeile ? _defined(U|xtclasspathzeile)
Line=.ART text xtclasspathdat ? _defined(U|xtclasspathdat)
Line=.ART text xtloggingpropdat ? _defined(U|xtloggingpropdat)
Line=.ART text xtclasspathsich ? _defined(U|xtclasspathsich)
Line=.ART text xtgrepdatei      ? _defined(xtgrepdatei)
Line=.ART text xtgreplogdatei ? _defined(xtgreplogdatei)
Line=.ART text xmandant        ? _defined(xmandant) 
Line=.ART text xttest               ? _defined(xttest)
Line=.ART text xtlogpropzeile ? _defined(xtlogpropzeile)
EndText;
Text;
Line=..====================================================
Line=..@@ENDVARDEFS
EndText;
EndLevel;
Text;
Line=.. initialize procedure stack pointer
Line=..FORMEL xprocsp = 0
EndText;
Frame;
Text;
Line=.WEITER EPROCDEF
EndText;
FrameBody;
Level=0
Text;
Line=procedure definitions
EndText;
LevelBody;
Procedure;
Text;
Line=schreibinidatei
EndText;
ProcedureBody;
Text;
Line=.AUSGABE auf 'xtini'
Line=.ein Datei.F
Line='M|yserver' # 'M|yport' # 'M|ymandant' #
Line=..
Line=.AUSGABE
EndText;
EndProcedure;
EndLevel;
EndFrameBody;
Text;
Line=!EPROCDEF: ----- end procedure definitions -----
EndText;
EndFrame;
Text;
Line=.FORMEL xtini="INI.IMPORT
EndText;
OnSelector;
Text;
Line=T|evtvar
EndText;
OnSelectorList;
OnSelectorBranch;
Text;
Line="ywert"
EndText;
OnSelectorBranchBody;
Text;
Line=.FORMEL M|yergebnis = F|isvalue('M|ywert' ,'M|ytype')
EndText;
EndOnSelectorBranch;
OnSelectorBranch;
Text;
Line="yfshow"
EndText;
OnSelectorBranchBody;
If;
Not;
Text;
Line=F|empty(M|ykommtext)
EndText;
EndNot;
Then;
Text;
Line=.DATEI -FOP -TEMPNAME T|xttempfile
Line=.AUSGABE AUF T|xttempfile
Line=.EINGABE DATEi.F
Line=.EINGABE 'M|ykomtext'
Line=.HOL  von T|xttempfile  xtzeile^
Line=.FORMEL  xtzeile=xtzeile>>1
EndText;
Text;
Line=.DAZU M|ydatensatz
EndText;
If;
Text;
Line=mehr
EndText;
Then;
Text;
Line=.FORMEL  xtkomm="<OBJEKT> "+'D|id'+"<Ñndern> ?"
EndText;
Else;
Text;
Line=.FORMEL  xtkomm="<OBJEKT> <neu> ?"
EndText;
EndIf;
Text;
Line=.FORMEL  xtkomd=xtkomm +xtzeile
Line=.KOMMANDO -WARTEN 'xtkomd'
EndText;
Else;
Dummy;
EndIf;
EndOnSelectorBranch;
OnSelectorBranch;
Text;
Line="ydoku"
EndText;
OnSelectorBranchBody;
Text;
Line=.EINGABE DRUCKER
Line=.EINGABE BLANKOB.F
EndText;
Level=0
Text;
Line=Text der Dokumentation
EndText;
LevelBody;
Text;
Line=                            Datenimport                   Stand: 03.01.2010
Line=                            ===========
Line=
Line=
Line=Das Infosystem IMPORTIT dient zum Import von Daten die als Exceldatei vorliegen.
Line=
Line=ACHTUNG:  Zum Import gro·er Datenmengen mu· der Java Arbeitsspeicher vergrî·ert werden.
Line=          Dies wird erreicht durch einen Eintrag in der homedir.env. Beispiel fÅr Vergrîsserung auf 512 MB:
Line=
Line=          Bis Version 2007r4n04:
Line=                                JFOP_SERVER_JVM_XMX = 512M
Line=
Line=          Bis Version 2007r4n04:
Line=                                JFOP_OPT = -Xmx512m
Line=
Line=          Anschliessender envmake -B nicht vergessen!
Line=
Line=
Line=Historie:
Line=           Version 1.0: Erste verîffentlichte Version
Line=
Line=           Version 1.1:
Line=                        1. Bugfix: Wenn Option "DatensÑtze anzeigen" gewÑhlt wurde, so wurde bei einem erfolgreichen Import die Fehlerinfo in der Zeile nicht gelîscht.
Line=                           Somit war ein Fehler eines Imports zuvor immer noch sichtbar
Line=                        2. @skip in feldnamen eingefÅhrt -> öbergehen der Spalte
Line=                        3. Versionsfeld eingefÅhrt -  Ruhe mit "Welche Version kann was?"
Line=                        4.  erste version fÅr subeditor.-> klappt aber noch nicht
Line=           Version 1.2:
Line=                        1. Bugfix - > ImportzÑhler korrigiert
Line=                        2. Es wird nicht mehr nach Import jeder Tabellenzeile gespeichert. Erst beim nÑchsten Datensatz wird gespeichert!
Line=                            => Fibu Buchungen sind mîglich zu importieren
Line=           Version 1.3
Line=                        1.  Bugfix -> "DatensÑtze immer neu Anlegen" funktionierte nicht - korrigiert!
Line=           Version 1.4
Line=                        1. Option Modifiable eingefÅhrt - Alle Felder werden optional auf "Ñnderbar" geprÅft
Line=                        2. Optionen in Excel vorbelegbar Åber Zelle C1
Line=                           BinÑrcode wird angegeben und wird auch in IS angezeigt in neuem Feld!
Line=                        3. Bugfix -> Auch ohne die Option "DatensÑtze anzeigen" wird im Fehlerfall die Zeileninfo bez. Selektion
Line=                           und Datensatzverweis korrekt dargestellt.
Line=                        4. Bugfix -> Durch die énderung des Speicherverhaltens in Version 1.2 wurde bei jedem Importfehler eine Java
Line=                           Exception ausgelîst. Dadurch wurden ab dieser Excelzeile keine weiteren Daten mehr importiert.
Line=                        5. TABABSPALTE wird nun mit 0 vorbelegt, wenn in Excel File als Leere Zelle vorhanden
Line=                        6. @modifiable als Spalten Option
Line=                        7. Fehleranalyse mittels Maskenaufruf integriert.
Line=                        8. @notempty als Spalten Option
Line=           Version 2.0
Line=           		1. Umstieg auf das Framework POI
Line=           		2. Der Import des neuen Excel-Format ist nun mîglich
Line=
Line=
Line=Genereller Ablauf
Line==================
Line=Die zu importierenden Daten werden in einer formatierten Excel Datei in
Line=eine Samba Freigabe innerhalb des Mandanten abgelegt.
Line=Im Infosystem nun den Pfad und Dateinamen der ExcelDatei im Feld
Line="Import Excel File" eintragen. Die Excel datei wird nun analysiert und die
Line=Importoptionen und Anzahl der gefundenen DatensÑtze sogleich in den
Line=entsprechenden Feldern dargestellt.
Line=Nach Eintrag von Server, Mandant, EDP Port und Passwort wird mit dem
Line=Button "importieren" der Datenimport gestartet. In der Statuszeile wird
Line=der Fortschritt des Imports angezeigt. Sobald der Import beendet ist, wird
Line=in der Maske das Ergebnis des Imports in den Feldern "ok" und "Fehler" angezeigt.
Line=Sollten Fehler beim Import aufgetreten sein, so wird desweiteren die Tabelle
Line=mit den Fehlerhaften DatensÑtzen aufgebaut und die EDP Fehlermeldung
Line=im Klartext angezeigt.
Line=Durch den Button "Fehleranlayse" in der Tabelle kann pro Datensatz der Import
Line=der Daten direkt in der Maske nachvollzogen werden. Hierbei wird die entsprechende
Line=Datenmaske von abas-ERP aufgerufen und die konfigurierten Felder ausgefÅllt.
Line=Diese Funktion steht aber nur fÅr insgesamt maximal 3000 Zeichen(Feldname+Feldinhalt) zur VerfÅgung.
Line=
Line=
Line=
Line=Formatierung der Excel Datei
Line=============================
Line=Die Excel Datei mu· entsprechend der Folgenden Definition formatiert sein:
Line=
Line=DB:GR              | TABABSPALTE | Optionscode
Line=Feldnamen@SchlÅssel|Feldnamen|Feldnamen|Feldnamen|
Line=Daten              |Daten    |Daten    |Daten    |
Line=Daten              |Daten    |Daten    |Daten    |
Line=Daten              |Daten    |Daten    |Daten    |
Line=Daten              |Daten    |Daten    |Daten    |
Line=
Line=
Line=DB:GR :
Line=In Zeile1/SpalteA  wird die Zieldatenbank und Gruppe der Daten angegeben. Die
Line=Angabe mu· EDP konform sein. Also z.B.: "Teil:Artikel"  oder "Verkauf:Auftrag".
Line=Desweiteren kann auch ein Tippkommando hier hinterlegt werden, zum Beispiel
Line="LBUCHUNG" um Lagerbuchungen durchzufÅhren. Sobald ein ":" in diesem Feld
Line=vorhanden ist, so wird die Information als Datenbank:Gruppe interpretiert,
Line=ansonsten als Tippkommando.
Line=
Line=TABABSPALTE:
Line=In Zeile1/SpalteB wird angegeben ab welcher Spalte Tabellendaten  vorhanden sind.
Line=Die ZÑhlung beginnt hierbei ab 1. Ist also in der Spalte "E" der erste Wert fÅr
Line=ein Tabellenfeld vorhanden, so wird diese Zelle mit 5 beschrieben. Sind keine
Line=Tabellenfelder zu importieren, so mu· das Feld mit 0 beschrieben werden.
Line=
Line=Optionscode:
Line=In Zeile1/Spalte C kann ein Optionscode angegeben werden. Dieser belegt die
Line=Importoptionen des Infosystems vor. Durch anwahl der verschiedenen Importoptionen
Line=wird im Feld Optionscode die entsprechende Zahl angezeigt die in der Exceltabelle Åbernommen werden kann.
Line=Damit kann in eine Exceltabelle mit einer Zusammenstellung von Optionen vorbelegt werden.
Line=
Line=Feldnamen:
Line=In Zeile2 ab SpalteB werden die Feldnamen der abas Felder darunterfolgenden
Line=Daten deklariert. Das hei·t diese Zeile ist zugleich die SchlÅsselung der
Line=Daten zu abas Feldern und zugleich stellt Sie die Reihenfolge des Datenimports
Line=dar.
Line=
Line=Feldnamen@SchlÅssel:
Line=In Zeile2/SpalteA wird beim Import in eine Datenbank der Kopfverweis des
Line=Datensatzes angegeben. öber den hier definierten Feldnamen wird in der Datenbank
Line=nach einem schon existierenden Datensatz gesucht. Mit "@" kann fÅr diese
Line=Datenselektion ein SchlÅssel mitgegeben werden. Wird mit einem Tippkommando
Line=gearbeitet, so ist in dieser Zelle der Feldnamen des ersten zubeschreibenden
Line=Feldes einzutragen. Eine Selektion findet bei einem Tippkomamndo nicht statt.
Line=
Line=Feldname@skip:
Line=Wird der feststehende Text "@skip" hinter einem Feldnamen erkannt, so wird diese Spalte
Line=generell beim Import Åbergangen.
Line=
Line=Feldname@modifiable:
Line=Ein "@modifiable" hinter einem Feldnamen bewirkt eine PrÅfung dieser Datenspalte auf Modifizierbarkeit
Line=bevor der Import erfolgt. Diese Spaltenoption ermîglicht einen Import von Datenspalten abhÑngig der
Line=Beschreibbarkeit des Feldes in abas-ERP. So ist das Feld "Maschinengruppe" in einer StÅckliste nur
Line=bei Eintrag eines Arbeitsganges beschreibbar. Ein leeres Datenfeld (z.b. bei einem Artikel in der StÅckliste)
Line=wÅrde aber zugleich auch einen nicht zulÑssigen Schreibversuch bedeuten.
Line=
Line=Feldname@notempty:
Line=Ein "@notempty" hinter einem Feldnamen bewirkt eine PrÅfung auf einen leeren Dateninhalt.
Line=Ist eine Zelle mit dieser Option nicht gefÅllt, so wird nicht importiert.
Line=Eine leere Zelle ohne diese Option wÅrde ansonsten einen eventuell bestehenden Feldinhalt lîschen.
Line=
Line=Daten:
Line=Ab der Zeile3 werden die Daten eingetragen. Die Daten mÅssen abas konform
Line=vorhanden sein. Ein "." in einem Datumsfeld bewirkt also den Eintrag des
Line=Tagesdatums im Datensatz in abas-ERP. Wird ein Datum mit 4 stelliger Jahreszahl
Line=dargestellt, in abas ist das Datenfeld aber mit stelliger Jahreszahl definiert
Line=so scheitert der Import.Mehrzeilige Texte werden abas konform behandelt, das hei·t
Line=ein Zeilenvorschub wird mit ";" im Text erreicht.
Line=
Line=Felder im Infosystem
Line=====================
Line=Zugangsdaten
Line=------------
Line=
Line=    Server: Der Namen oder die IP Adresse des Servers
Line=   Mandant: Der Mandantenname (Loginname fÅr EDP)
Line=      Port: Der EDP Port des Mandanten
Line=  Passwort: Das Login Passwort fÅr den Mandanten
Line=
Line=Excel
Line=-----
Line=Import Excel File: In dieses Feld wird de Pfad und Dateiname zur Excel Datei
Line=                   eingetragen. Also z.b. owimp/Kunden.xls Der Pfad muss unterhalb
Line=                   des Mandanten liegen.
Line=       Error File: Aus dem Import Excel File wird automatisch ein Dateiname der
Line=                   entstehenden Error Datei gebildet. Aus owimp/Kunden.xls wird
Line=                   automatisch owimp/Kundenerror.xls. In diese Datei werden die
Line=                   DatensÑtze geschrieben die nich timportiert werden konnten.
Line=                   Diese Datei kann dann als Wiederaufsetzdatei nach bearbeiten der
Line=                   Daten verwendet werden. Desweiteren werden die EDP Fehler beim
Line=                   Import mit in diese Datei geschrieben.
Line=
Line=Informationen zur Import Datei
Line=------------------------------
Line= Datenbank: Im Feld Datenbank wird die aus der Exceldatei gelesene Datenbank oder
Line=            das Tippkommando zur Kontrolle dargestellt.
Line=    Gruppe: In diesem Feld wird die aus der Exceldatei gelesene Datenbankgruppe
Line=            zur Kontrolle dargestellt.
Line=DatensÑtze: Nach Eintrag einer Excel Datei im Feld "Import Excel File" wird in
Line=            diesem Feld die Anzahl der zu importierenden DatensÑtze angezeigt.
Line=
Line=
Line=Importoptionen:
Line=---------------
Line=       DatensÑtze neu anlegen: Mit dieser Option wird keine Datenselektion vor dem
Line=                               Import durchgefÅhrt. Jeder Datensatz wird neu angelegt.
Line=             FOP deaktivieren: Beim Import werden  EFOPS in den Zielmasken ausgeschaltet.
Line=       Mit mîglichem Rollback: Der Import wird in einer Transaction druchgefÅhrt. Nach
Line=                               Import der Daten erscheint ein MenÅ zur Auswahl zwischen
Line=                               "Daten speichern" und "Daten nicht speichern". Bevor nun
Line=                               eine Auswahl getroffen wird kînnen die Importierten Daten
Line=                               kontrolliert werden.Die Daten sind vorhanden in abas-ERP.
Line=                               Wird "Daten nicht speichern" gewÑhlt, so wird ein Rollback
Line=                               des gesamten Imports durchgefÅhrt und damit die
Line=                               urpsrÅnglichen Daten wieder hergestellt.
Line=      Tabellendaten ab Spalte: Dieses Feld wird nach der Analyse der Excel Datei automatisch
Line=                               gefÅllt. Es kann aber noch nachtrÑglich Åberschrieben werden.
Line=              Tabelle lîschen: Dieser Kenner bewirkt ein Lîschen der Tabelle der betroffenen
Line=                               DatensÑtze bevor Datenimport beginnt.
Line=Feld Modifizierbarkeit prÅfen: Durch diese Option wird jedes Feld vor Beschreibung mit Daten
Line=                               auf eine vom abas-ERP kern erlaubte DatenÑnderung geprÅft.
Line=                               Verbietet der abas-ERP kern eine DatenÑnderung so wird diese
Line=                               nicht durchgefÅhrt. Eine Fehlermeldung entsteht dabei nicht
Line=                  Optionscode: In diesem Feld wird eine eindeutige Zahl anhand der gewÑhlten
Line=                               Importoptionen angezeigt. Diese Zahl kann in der zu importierenden
Line=                               Exceltabelle in C1 eingetragen werden. Danach werden beim Laden der
Line=                               Exceltabelle immer die entsprechenden Importoptionen vorbelegt.
Line=..
Line=..
EndText;
EndLevel;
If;
Text;
Line=F|empty(T|gerÑt)
EndText;
Then;
Text;
Line=.AUSGABE BILDSCHIRM
EndText;
Else;
Text;
Line=.AUSGABE 'T|gerÑt'
EndText;
EndIf;
EndOnSelectorBranch;
OnSelectorRest;
OnSelectorBranch;
Dummy;
OnSelectorBranchBody;
If;
Text;
Line=T|evtart = "maskein"
EndText;
Then;
Text;
Line=.FORMEL M|yversion = "2.1.0"
EndText;
Text;
Line=.FORMEL U|xtjavadat = "owjava/importitnew21java.tgz"
Line=.FORMEL U|xtclasspathdat = "java/mandant.classpath"
Line=.FORMEL U|xtloggingpropdat = "java/log/config/logging.properties" 
Line=.FORMEL U|xtclasspathzeile1 = "java/projects/importitnew/importitnew21.jar"
Line=.FORMEL U|xtclasspathzeile2 = "java/projects/importitnew/includejar/commons-lang3-3.4.jar"
Line=.FORMEL U|xtclasspathzeile3 = "java/projects/importitnew/includejar/poi-3.9-20121203.jar"
Line=.FORMEL U|xtclasspathzeile4 = "java/projects/importitnew/includejar/poi-ooxml-3.9-20121203.jar"
Line=.FORMEL U|xtclasspathzeile5 = "java/projects/importitnew/includejar/poi-ooxml-schemas-3.9-20121203.jar"
Line=.FORMEL U|xtclasspathzeile6 = "java/projects/importitnew/includejar/xmlbeans-2.3.0.jar"
Line=.FORMEL U|xtlogpropzeile = "log4j.logger.de.abaspro.infosystem.importit.Importit21=TRACE, de.abaspro.infosystem.importit.Importit21.RollingFile"
Line=.FORMEL U|xtclasspathsich = U|xtclasspathdat + "_sich_" + 'T|sekundenz'  
Line=.FORMEL U|xtloggingpropsich = U|xtloggingpropdat + "_sich_" + 'T|sekundenz'  
Line=.DATEI -TEMPNAME U|xtgrepdatei
Line=.DATEI -TEMPNAME U|xtgreplogdatei
EndText;
If;
Text;
Line=F|filenotempty(U|xtjavadat)
EndText;
Then;
If;
Not;
Text;
Line=F|filenotempty(U|xtclasspathzeile1)
EndText;
EndNot;
Then;
Text;
Line=.FORMEL U|xtprojectspfad = "java/projects"
EndText;
Text;
Line=.FORMEL U|xtprojectpfad = "java/projects/importitnew"
EndText;
If;
Not;
Text;
Line=F|fileexists(U|xtprojectspfad)
EndText;
EndNot;
Then;
Text;
Line=.FORMEL U|xtsys = "mkdir " + U|xtprojectspfad
EndText;
Text;
Line=.SYSTEM 'U|xtsys' hinter
EndText;
Else;
Dummy;
EndIf;
If;
Not;
Text;
Line=F|fileexists(U|xtprojectpfad)
EndText;
EndNot;
Then;
Text;
Line=.FORMEL U|xtsys = "mkdir " + U|xtprojectpfad
EndText;
Text;
Line=.SYSTEM 'U|xtsys' hinter
EndText;
Else;
Dummy;
EndIf;
Text;
Line=..tgz - File entpacken importitnew21java.tgz
EndText;
Text;
Line=.FORMEL U|xtsys = "cd java/projects/;tar xvzf ../../" + 'U|xtjavadat' 
EndText;
Text;
Line=.SYSTEM 'U|xtsys' hinter
EndText;
Text;
Line=..erstprÅfen und danach mandant.classpath erweitern
EndText;
Text;
Line=.FORMEL U|xizaehl = 1
EndText;
While;
Text;
Line=U|xizaehl <= 6
EndText;
WhileBody;
Text;
Line=.FORMEL U|xtsys = "cd ~;grep "+ T|apostroph + U|xtclasspathzeile.U|xizaehl + T|apostroph + " java/mandant.classpath > " + U|xtgrepdatei
EndText;
Text;
Line=.SYSTEM 'U|xtsys' hinter
EndText;
If;
Not;
Text;
Line=F|filenotempty(U|xtgrepdatei)
EndText;
EndNot;
Then;
Text;
Line=.AUSGABE AUF 'U|xtgrepdatei'
EndText;
Text;
Line=.EIN DATEI.F
EndText;
Text;
Line=
Line='U|xtclasspathzeile.U|xizaehl' 
EndText;
Text;
Line=.AUSGABE 
EndText;
Text;
Line=.FORMEL U|xtsys = "cat -u " + U|xtclasspathdat +" " + U|xtgrepdatei + " >" + U|xtclasspathsich + ";cp -f " + U|xtclasspathsich + " " + U|xtclasspathdat
EndText;
Text;
Line=.SYSTEM 'U|xtsys' hinter
EndText;
Text;
Line=.FORMEL U|xtsys = "rm " + U|xtgrepdatei
EndText;
Text;
Line=.SYSTEM 'U|xtsys' hinter
EndText;
Else;
Dummy;
EndIf;
Text;
Line=.FORMEL U|xizaehl = U|xizaehl +1
EndText;
EndWhile;
Text;
Line=..logging.properties ÅberprÅfen
EndText;
Text;
Line=.FORMEL U|xtsys = "cd ~;grep "+ T|apostroph + U|xtlogpropzeile + T|apostroph + " " + xtloggingpropdat + "  >" + U|xtgreplogdatei
EndText;
Text;
Line=.SYSTEM 'U|xtsys' hinter
EndText;
If;
Not;
Text;
Line=F|filenotempty(U|xtgreplogdatei)
EndText;
EndNot;
Then;
Text;
Line=.AUSGABE AUF 'U|xtgreplogdatei'
EndText;
Text;
Line=.EIN DATEI.F
EndText;
Text;
Line=
Line=# logging for IMPORTIT21
EndText;
Text;
Line=log4j.logger.de.abaspro.infosystem.importit.Importit21=TRACE, de.abaspro.infosystem.importit.Importit21.RollingFile
Line=log4j.appender.de.abaspro.infosystem.importit.Importit21.RollingFile=org.apache.log4j.RollingFileAppender
Line=log4j.appender.de.abaspro.infosystem.importit.Importit21.RollingFile.File=java/log/importit21.log
Line=log4j.appender.de.abaspro.infosystem.importit.Importit21.RollingFile.Append=true
Line=log4j.appender.de.abaspro.infosystem.importit.Importit21.RollingFile.MaxBackupIndex=10
Line=log4j.appender.de.abaspro.infosystem.importit.Importit21.RollingFile.layout=org.apache.log4j.PatternLayout
Line=log4j.appender.de.abaspro.infosystem.importit.Importit21.RollingFile.MaxFileSize=5MB
Line=log4j.appender.de.abaspro.infosystem.importit.Importit21.RollingFile.layout.ConversionPattern=[%X{USER_CODE}:%X{CALLER_ID}] %d{dd.MMM.yyyy HH:mm} %7r %-5p - %m%n
EndText;
Text;
Line=.AUSGABE 
EndText;
Text;
Line=.FORMEL U|xtsys = "cat -u " + U|xtloggingpropdat +" " + U|xtgreplogdatei + " >" + U|xtloggingpropsich + ";cp -f " + U|xtloggingpropsich + " " + U|xtloggingpropdat
EndText;
Text;
Line=.SYSTEM 'U|xtsys' hinter
EndText;
Else;
Dummy;
EndIf;
Text;
Line=.FORMEL U|xtkommd = "<infosystem>IMPORTIT21<zeigen> ? bugenclass=1|[invisible]=1"
EndText;
Text;
Line=.KOMMANDO -WARTEN 'U|xtkommd'
EndText;
Text;
Line=.FORMEL U|xtsel = "$,,such==JSADMIN"
EndText;
Text;
Line=.LAD 1 Infosystem 'U|xtsel'
EndText;
If;
Text;
Line=mehr
EndText;
Then;
Text;
Line=.box 
Line=Bitte alle Jfopsserver Instanzen beenden, damit die neuen Klassen berÅcksichtigt werden.
Line=..
EndText;
Text;
Line=.FORMEL U|xtkommd = "<infosystem>JSADMIN <hole> ? bstart=1
EndText;
Text;
Line=.KOMMANDO -WARTEN 'U|xtkommd'
EndText;
Else;
Text;
Line=.FORMEL U|xtsys = "jfopserver_shutdown.sh"
EndText;
Text;
Line=.SYSTEM 'U|xtsys' hinter
EndText;
EndIf;
Else;
Dummy;
EndIf;
Else;
Dummy;
EndIf;
Text;
Line=.DATEI -TEMPNAME U|xtdatei
EndText;
Text;
Line=.FORMEL U|xtsys = "for i in `mdir.sh` ; do cd $i ; envmake -x $i -q MNAME -q MANDANTDIR -q MANDANT ; done  |grep " + E|MANDANT + " > " + U|xtdatei
Line=.SYSTEM 'U|xtsys' hinter
EndText;
If;
Text;
Line=F|filenotempty(U|xtdatei)
EndText;
Then;
Text;
Line=.DATEI -OEFFNEN xidat 'U|xtdatei'
EndText;
If;
Text;
Line=mehr
EndText;
Then;
Text;
Line=.DATEI -LESEN xidat xmandant # xttest^
EndText;
If;
Text;
Line=mehr
EndText;
Then;
Text;
Line=.FORMEL M|ymandant = U|xmandant
EndText;
Text;
Line=.FORMEL M|yeigmandant = U|xmandant
EndText;
Else;
Dummy;
EndIf;
Else;
Dummy;
EndIf;
Else;
Dummy;
EndIf;
Text;
Line=.FORMEL   M|yserver= 'E|EDPHOST'
Line=.FORMEL  M|yport='E|EDPPORT'
EndText;
If;
Text;
Line=F|empty(M|ymandant)
EndText;
Then;
Text;
Line=.FORMEL  M|ymandant= E|MANDANT
EndText;
Else;
Dummy;
EndIf;
If;
Not;
Text;
Line=xyservice
EndText;
EndNot;
Then;
Text;
Line=.SCHUTZ yserver 0
Line=.SCHUTZ yport 0
Line=.SCHUTZ ymandant 0
EndText;
Else;
Dummy;
EndIf;
Else;
Dummy;
EndIf;
EndOnSelectorBranch;
EndOnSelector;
EndLevel;