..!interpreter english translate
..============================================================================
..  Author             : tk
..  Date of Creation   : 12.03.2017
..  Name               : owfw7/IS.IMPORTIT21
..  Path/Pfad          : 
..  Function           : 
..  include-easy  spx/ow
..  required Paths    : 
..  Menu Items        : 
..  Mask Priority
.. for EFOP           : 
..  Starting Ticket    : 
..                     History of Changes
..                     ==================
.. Ticket of Change    : 
..
..============================================================================
..include owfw7/importitapp.tgz
..
def main(){
   
    ..<BLOCK> standard programs
    .input ARB
    ..</BLOCK>
    ..<VAR> variable definitions
    ..@@BEGINVARDEFS
    ..====================================================
    ..... procedure stack pointer .....
    .type integer    xIdummy                 ? _F|defined(U|xIdummy)
    .type text       xTdummy                 ? _F|defined(U|xTdummy)
    .type real       xRdummy                 ? _F|defined(U|xRdummy)
    .type text       xTsystem                ? _F|defined(U|xTsystem)
    .type integer    xizaehl                 ? _F|defined(U|xizaehl)
    .type integer    xianzkopffeld           ? _F|defined(U|xianzkopffeld)
    .type text       xtueber                 ? _F|defined(U|xtueber)
    .type text       xtsel                     ? _F|defined(U|xtsel)
    .type text       xtkommd              ? _F|defined(U|xtkommd)
    .type text       xtdatei                  ? _F|defined(U|xtdatei)
    .type bool      xbfehler                ? _F|defined(U|xbfehler)   
    .type bool       xBmehr  ? _F|defined(U|xBmehr)
    .type text xtjavadat  ? _F|defined(U|xtjavadat)
    .type text xtjavaclass ? _F|defined(U|xtjavaclass)
    .type text xtclasspathzeile ? _F|defined(U|xtclasspathzeile)
    .type text xtclasspathdat ? _F|defined(U|xtclasspathdat)
    .type text xtloggingpropdat ? _F|defined(U|xtloggingpropdat)
    .type text xtclasspathsich ? _F|defined(U|xtclasspathsich)
    .type text xtgrepdatei      ? _F|defined(U|xtgrepdatei)
    .type text xtgreplogdatei ? _F|defined(U|xtgreplogdatei)
    .type text xmandant        ? _F|defined(U|xmandant)
    .type text xttest               ? _F|defined(U|xttest)
    .type text xtlogpropzeile ? _F|defined(U|xtlogpropzeile)
    .var  text xtini
    .var text xtdocudat
    .var text xtsys
    ..====================================================
    ..@@ENDVARDEFS
    .var integer xidat
.var text xtprojectspfad
.var text xtapppath
..</VAR>

    .formula U|xtini = "INI.IMPORT"
..<META M|='Importit21' > 
     	if(G|evtart = "maskein"){
    		.formula M|yversion = "2.1.2"
    		.formula U|xtdocudat = "owfw7/owimportitDocumentation.tar"
    		.call extractDoctar() 
    		.call fuellMAndantFelder() 	
    }
    
}


def fuellMAndantFelder(){
..<META M|='Importit21' >
            .file -TEMPNAME U|xtdatei
            .formula U|xtsys = "for i in `mdir.sh` ; do cd $i ; envmake -x $i -q MNAME -q MANDANTDIR -q MANDANT ; done  |grep " + E|MANDANT + " > " + U|xtdatei
            .system 'U|xtsys' Background
            
            if(F|filenotempty(U|xtdatei)){
                .file -OPEN U|xidat 'U|xtdatei'
                if(G|mehr){
                    .file -READ U|xidat U|xmandant # U|xttest^
                    if(G|mehr){
                    ..<META M|='Importit21' >
                        .formula M|ymandant = U|xmandant
                        .formula M|yeigmandant = U|xmandant
                    }else{
                    }
                }else{
                }
            }else{
            }

            .formula   M|yserver= 'E|EDPHOST'
            .formula  M|yport='E|EDPPORT'
            if(F|empty(M|ymandant)){
                .formula  M|ymandant= E|MANDANT
            }else{
            }
}

def extractDoctar(){
    .formula U|xtsys = "cd win/tmp/;tar xvf ../../owfw7/owimportitDocumentation.tar"
    .system 'U|xtsys' Background

}