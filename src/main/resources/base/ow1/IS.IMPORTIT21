..!interpreter german translate
.. easy2lg - generiert
.. Copyright (c) 1990-2012  ABAS Software AG
.. Generated by ABAS Projektierung GmbH Hockenheim <TK>
.. at 2016-03-09, 16:42
.. file: \\192.168.178.36\abasgls-spx\owjava\is.importit21.spx
..
..  owjava/IS.IMPORTIT21
..
.. kopf
.SETZE Trans -
..@@BEGINHEAD
..========================================================================
..==
..==  Name              : IS.IMPORTIT21
..==
..==  Pfad              :  owjava
..==
..==  Funktion          :
..==
..==
..==  Erstellungsdatum  :  14.11.2013
..==
..==  Autor             : ABAS Projektierung GmbH <TK>
..==
..==  Menuepunkte       :
..==
..==  Maskenprioritaet
..==  bei EFOP          :
..==
..==  Besonderheiten    :
..==
..==
..==
..include owjava/importitnew21java.tgz
..==
..==  Aenderungshistorie:
..==
..========================================================================
..@@ENDHEAD
..
.. standard programs
.EINGABE ARB
..
.EINGABE DEFAULT.INI
..
.. variable definitions
..@@BEGINVARDEFS
..====================================================
..... procedure stack pointer .....
.ART integer    xprocsp                 ? _defined(xprocsp)
.ART integer    xIdummy                 ? _defined(xIdummy)
.ART text       xTdummy                 ? _defined(xTdummy)
.ART real       xRdummy                 ? _defined(xRdummy)
.ART text       xTsystem                ? _defined(xTsystem)
.ART integer    xizaehl                 ? _defined(xizaehl)
.ART integer    xianzkopffeld           ? _defined(xianzkopffeld)
.ART text       xtueber                 ? _defined(xtueber)
.ART text       xtsel                     ? _defined(xtsel)
.ART text       xtkommd              ? _defined(xtkommd)
.ART text       xtdatei                  ? _defined(xtdatei)
.ART bool      xbfehler                ? _defined(xbfehler)
..
.. --------------------   BLOCK  --------------------
.. BOOLsche - Variablen
.ART bool       xBmehr  ? _defined(T|xBmehr)
..
.. -------------------- ENDBLOCK --------------------
..
.. --------------------   BLOCK  --------------------
.. REAL - Variablen
.. -------------------- ENDBLOCK --------------------
..
.ART text xtjavadat  ? _defined(U|xtjavadat)
.ART text xtjavaclass ? _defined(U|xtjavaclass)
.ART text xtclasspathzeile ? _defined(U|xtclasspathzeile)
.ART text xtclasspathdat ? _defined(U|xtclasspathdat)
.ART text xtloggingpropdat ? _defined(U|xtloggingpropdat)
.ART text xtclasspathsich ? _defined(U|xtclasspathsich)
.ART text xtgrepdatei      ? _defined(xtgrepdatei)
.ART text xtgreplogdatei ? _defined(xtgreplogdatei)
.ART text xmandant        ? _defined(xmandant)
.ART text xttest               ? _defined(xttest)
.ART text xtlogpropzeile ? _defined(xtlogpropzeile)
..
..====================================================
..@@ENDVARDEFS
..
.. initialize procedure stack pointer
..FORMEL xprocsp = 0
..
.. ----------------------------------------
.WEITER EPROCDEF
.. procedure definitions
..
!PROC001: ----- schreibinidatei -----
.AUSGABE auf 'xtini'
.ein Datei.F
'M|yserver' # 'M|yport' # 'M|ymandant' #
..
.AUSGABE
..
.weiter 'xprocst.xprocsp'
..
!EPROCDEF: ----- end procedure definitions -----
.. ----------------------------------------
..
.FORMEL xtini="INI.IMPORT
..
..
.. =====   CASE001   =====
.weiter BRK001 ? _(T|evtvar = "ywert")
.FORMEL M|yergebnis = F|isvalue('M|ywert' ,'M|ytype')
..
.weiter ESAC001
!BRK001
.weiter BRK002 ? _(T|evtvar = "yfshow")
..
.weiter EL001 ? _(_(F|empty(M|ykommtext)))
.. IF001
.DATEI -FOP -TEMPNAME T|xttempfile
.AUSGABE AUF T|xttempfile
.EINGABE DATEi.F
.EINGABE 'M|ykomtext'
.HOL  von T|xttempfile  xtzeile^
.FORMEL  xtzeile=xtzeile>>1
..
.DAZU M|ydatensatz
..
..
.weiter EL002 ? _(mehr)
.. IF002
.FORMEL  xtkomm="<OBJEKT> "+'D|id'+"<Ñndern> ?"
..
.weiter FI002
!EL002
.FORMEL  xtkomm="<OBJEKT> <neu> ?"
..
!FI002
..
.FORMEL  xtkomd=xtkomm +xtzeile
.KOMMANDO -WARTEN 'xtkomd'
..
!EL001
.. FI001
..
.weiter ESAC001
!BRK002
.weiter BRK003 ? _(T|evtvar = "ydoku")
.EINGABE DRUCKER
.EINGABE BLANKOB.F
..
.. Text der Dokumentation
                            Datenimport                   Stand: 03.01.2010
                            ===========


Das Infosystem IMPORTIT dient zum Import von Daten die als Exceldatei vorliegen.

ACHTUNG:  Zum Import gro·er Datenmengen mu· der Java Arbeitsspeicher vergrî·ert werden.
          Dies wird erreicht durch einen Eintrag in der homedir.env. Beispiel fÅr Vergrîsserung auf 512 MB:

          Bis Version 2007r4n04:
                                JFOP_SERVER_JVM_XMX = 512M

          Bis Version 2007r4n04:
                                JFOP_OPT = -Xmx512m

          Anschliessender envmake -B nicht vergessen!


Historie:
           Version 1.0: Erste verîffentlichte Version

           Version 1.1:
                        1. Bugfix: Wenn Option "DatensÑtze anzeigen" gewÑhlt wurde, so wurde bei einem erfolgreichen Import die Fehlerinfo in der Zeile nicht gelîscht.
                           Somit war ein Fehler eines Imports zuvor immer noch sichtbar
                        2. @skip in feldnamen eingefÅhrt -> öbergehen der Spalte
                        3. Versionsfeld eingefÅhrt -  Ruhe mit "Welche Version kann was?"
                        4.  erste version fÅr subeditor.-> klappt aber noch nicht
           Version 1.2:
                        1. Bugfix - > ImportzÑhler korrigiert
                        2. Es wird nicht mehr nach Import jeder Tabellenzeile gespeichert. Erst beim nÑchsten Datensatz wird gespeichert!
                            => Fibu Buchungen sind mîglich zu importieren
           Version 1.3
                        1.  Bugfix -> "DatensÑtze immer neu Anlegen" funktionierte nicht - korrigiert!
           Version 1.4
                        1. Option Modifiable eingefÅhrt - Alle Felder werden optional auf "Ñnderbar" geprÅft
                        2. Optionen in Excel vorbelegbar Åber Zelle C1
                           BinÑrcode wird angegeben und wird auch in IS angezeigt in neuem Feld!
                        3. Bugfix -> Auch ohne die Option "DatensÑtze anzeigen" wird im Fehlerfall die Zeileninfo bez. Selektion
                           und Datensatzverweis korrekt dargestellt.
                        4. Bugfix -> Durch die énderung des Speicherverhaltens in Version 1.2 wurde bei jedem Importfehler eine Java
                           Exception ausgelîst. Dadurch wurden ab dieser Excelzeile keine weiteren Daten mehr importiert.
                        5. TABABSPALTE wird nun mit 0 vorbelegt, wenn in Excel File als Leere Zelle vorhanden
                        6. @modifiable als Spalten Option
                        7. Fehleranalyse mittels Maskenaufruf integriert.
                        8. @notempty als Spalten Option
           Version 2.0
           		1. Umstieg auf das Framework POI
           		2. Der Import des neuen Excel-Format ist nun mîglich


Genereller Ablauf
=================
Die zu importierenden Daten werden in einer formatierten Excel Datei in
eine Samba Freigabe innerhalb des Mandanten abgelegt.
Im Infosystem nun den Pfad und Dateinamen der ExcelDatei im Feld
"Import Excel File" eintragen. Die Excel datei wird nun analysiert und die
Importoptionen und Anzahl der gefundenen DatensÑtze sogleich in den
entsprechenden Feldern dargestellt.
Nach Eintrag von Server, Mandant, EDP Port und Passwort wird mit dem
Button "importieren" der Datenimport gestartet. In der Statuszeile wird
der Fortschritt des Imports angezeigt. Sobald der Import beendet ist, wird
in der Maske das Ergebnis des Imports in den Feldern "ok" und "Fehler" angezeigt.
Sollten Fehler beim Import aufgetreten sein, so wird desweiteren die Tabelle
mit den Fehlerhaften DatensÑtzen aufgebaut und die EDP Fehlermeldung
im Klartext angezeigt.
Durch den Button "Fehleranlayse" in der Tabelle kann pro Datensatz der Import
der Daten direkt in der Maske nachvollzogen werden. Hierbei wird die entsprechende
Datenmaske von abas-ERP aufgerufen und die konfigurierten Felder ausgefÅllt.
Diese Funktion steht aber nur fÅr insgesamt maximal 3000 Zeichen(Feldname+Feldinhalt) zur VerfÅgung.



Formatierung der Excel Datei
============================
Die Excel Datei mu· entsprechend der Folgenden Definition formatiert sein:

DB:GR              | TABABSPALTE | Optionscode
Feldnamen@SchlÅssel|Feldnamen|Feldnamen|Feldnamen|
Daten              |Daten    |Daten    |Daten    |
Daten              |Daten    |Daten    |Daten    |
Daten              |Daten    |Daten    |Daten    |
Daten              |Daten    |Daten    |Daten    |


DB:GR :
In Zeile1/SpalteA  wird die Zieldatenbank und Gruppe der Daten angegeben. Die
Angabe mu· EDP konform sein. Also z.B.: "Teil:Artikel"  oder "Verkauf:Auftrag".
Desweiteren kann auch ein Tippkommando hier hinterlegt werden, zum Beispiel
"LBUCHUNG" um Lagerbuchungen durchzufÅhren. Sobald ein ":" in diesem Feld
vorhanden ist, so wird die Information als Datenbank:Gruppe interpretiert,
ansonsten als Tippkommando.

TABABSPALTE:
In Zeile1/SpalteB wird angegeben ab welcher Spalte Tabellendaten  vorhanden sind.
Die ZÑhlung beginnt hierbei ab 1. Ist also in der Spalte "E" der erste Wert fÅr
ein Tabellenfeld vorhanden, so wird diese Zelle mit 5 beschrieben. Sind keine
Tabellenfelder zu importieren, so mu· das Feld mit 0 beschrieben werden.

Optionscode:
In Zeile1/Spalte C kann ein Optionscode angegeben werden. Dieser belegt die
Importoptionen des Infosystems vor. Durch anwahl der verschiedenen Importoptionen
wird im Feld Optionscode die entsprechende Zahl angezeigt die in der Exceltabelle Åbernommen werden kann.
Damit kann in eine Exceltabelle mit einer Zusammenstellung von Optionen vorbelegt werden.

Feldnamen:
In Zeile2 ab SpalteB werden die Feldnamen der abas Felder darunterfolgenden
Daten deklariert. Das hei·t diese Zeile ist zugleich die SchlÅsselung der
Daten zu abas Feldern und zugleich stellt Sie die Reihenfolge des Datenimports
dar.

Feldnamen@SchlÅssel:
In Zeile2/SpalteA wird beim Import in eine Datenbank der Kopfverweis des
Datensatzes angegeben. öber den hier definierten Feldnamen wird in der Datenbank
nach einem schon existierenden Datensatz gesucht. Mit "@" kann fÅr diese
Datenselektion ein SchlÅssel mitgegeben werden. Wird mit einem Tippkommando
gearbeitet, so ist in dieser Zelle der Feldnamen des ersten zubeschreibenden
Feldes einzutragen. Eine Selektion findet bei einem Tippkomamndo nicht statt.

Feldname@skip:
Wird der feststehende Text "@skip" hinter einem Feldnamen erkannt, so wird diese Spalte
generell beim Import Åbergangen.

Feldname@modifiable:
Ein "@modifiable" hinter einem Feldnamen bewirkt eine PrÅfung dieser Datenspalte auf Modifizierbarkeit
bevor der Import erfolgt. Diese Spaltenoption ermîglicht einen Import von Datenspalten abhÑngig der
Beschreibbarkeit des Feldes in abas-ERP. So ist das Feld "Maschinengruppe" in einer StÅckliste nur
bei Eintrag eines Arbeitsganges beschreibbar. Ein leeres Datenfeld (z.b. bei einem Artikel in der StÅckliste)
wÅrde aber zugleich auch einen nicht zulÑssigen Schreibversuch bedeuten.

Feldname@notempty:
Ein "@notempty" hinter einem Feldnamen bewirkt eine PrÅfung auf einen leeren Dateninhalt.
Ist eine Zelle mit dieser Option nicht gefÅllt, so wird nicht importiert.
Eine leere Zelle ohne diese Option wÅrde ansonsten einen eventuell bestehenden Feldinhalt lîschen.

Daten:
Ab der Zeile3 werden die Daten eingetragen. Die Daten mÅssen abas konform
vorhanden sein. Ein "." in einem Datumsfeld bewirkt also den Eintrag des
Tagesdatums im Datensatz in abas-ERP. Wird ein Datum mit 4 stelliger Jahreszahl
dargestellt, in abas ist das Datenfeld aber mit stelliger Jahreszahl definiert
so scheitert der Import.Mehrzeilige Texte werden abas konform behandelt, das hei·t
ein Zeilenvorschub wird mit ";" im Text erreicht.

Felder im Infosystem
====================
Zugangsdaten
------------

    Server: Der Namen oder die IP Adresse des Servers
   Mandant: Der Mandantenname (Loginname fÅr EDP)
      Port: Der EDP Port des Mandanten
  Passwort: Das Login Passwort fÅr den Mandanten

Excel
-----
Import Excel File: In dieses Feld wird de Pfad und Dateiname zur Excel Datei
                   eingetragen. Also z.b. owimp/Kunden.xls Der Pfad muss unterhalb
                   des Mandanten liegen.
       Error File: Aus dem Import Excel File wird automatisch ein Dateiname der
                   entstehenden Error Datei gebildet. Aus owimp/Kunden.xls wird
                   automatisch owimp/Kundenerror.xls. In diese Datei werden die
                   DatensÑtze geschrieben die nich timportiert werden konnten.
                   Diese Datei kann dann als Wiederaufsetzdatei nach bearbeiten der
                   Daten verwendet werden. Desweiteren werden die EDP Fehler beim
                   Import mit in diese Datei geschrieben.

Informationen zur Import Datei
------------------------------
 Datenbank: Im Feld Datenbank wird die aus der Exceldatei gelesene Datenbank oder
            das Tippkommando zur Kontrolle dargestellt.
    Gruppe: In diesem Feld wird die aus der Exceldatei gelesene Datenbankgruppe
            zur Kontrolle dargestellt.
DatensÑtze: Nach Eintrag einer Excel Datei im Feld "Import Excel File" wird in
            diesem Feld die Anzahl der zu importierenden DatensÑtze angezeigt.


Importoptionen:
---------------
       DatensÑtze neu anlegen: Mit dieser Option wird keine Datenselektion vor dem
                               Import durchgefÅhrt. Jeder Datensatz wird neu angelegt.
             FOP deaktivieren: Beim Import werden  EFOPS in den Zielmasken ausgeschaltet.
       Mit mîglichem Rollback: Der Import wird in einer Transaction druchgefÅhrt. Nach
                               Import der Daten erscheint ein MenÅ zur Auswahl zwischen
                               "Daten speichern" und "Daten nicht speichern". Bevor nun
                               eine Auswahl getroffen wird kînnen die Importierten Daten
                               kontrolliert werden.Die Daten sind vorhanden in abas-ERP.
                               Wird "Daten nicht speichern" gewÑhlt, so wird ein Rollback
                               des gesamten Imports durchgefÅhrt und damit die
                               urpsrÅnglichen Daten wieder hergestellt.
      Tabellendaten ab Spalte: Dieses Feld wird nach der Analyse der Excel Datei automatisch
                               gefÅllt. Es kann aber noch nachtrÑglich Åberschrieben werden.
              Tabelle lîschen: Dieser Kenner bewirkt ein Lîschen der Tabelle der betroffenen
                               DatensÑtze bevor Datenimport beginnt.
Feld Modifizierbarkeit prÅfen: Durch diese Option wird jedes Feld vor Beschreibung mit Daten
                               auf eine vom abas-ERP kern erlaubte DatenÑnderung geprÅft.
                               Verbietet der abas-ERP kern eine DatenÑnderung so wird diese
                               nicht durchgefÅhrt. Eine Fehlermeldung entsteht dabei nicht
                  Optionscode: In diesem Feld wird eine eindeutige Zahl anhand der gewÑhlten
                               Importoptionen angezeigt. Diese Zahl kann in der zu importierenden
                               Exceltabelle in C1 eingetragen werden. Danach werden beim Laden der
                               Exceltabelle immer die entsprechenden Importoptionen vorbelegt.
..
..
..
..
.weiter EL003 ? _(F|empty(T|gerÑt))
.. IF003
.AUSGABE BILDSCHIRM
..
.weiter FI003
!EL003
.AUSGABE 'T|gerÑt'
..
!FI003
..
.weiter ESAC001
!BRK003
..
.weiter EL004 ? _(T|evtart = "maskein")
.. IF004
.FORMEL M|yversion = "2.1.0"
..
.FORMEL U|xtjavadat = "owjava/importitnew21java.tgz"
.FORMEL U|xtclasspathdat = "java/mandant.classpath"
.FORMEL U|xtloggingpropdat = "java/log/config/logging.properties"
.FORMEL U|xtclasspathzeile1 = "java/projects/importitnew/importitnew21.jar"
.FORMEL U|xtclasspathzeile2 = "java/projects/importitnew/includejar/commons-lang3-3.4.jar"
.FORMEL U|xtclasspathzeile3 = "java/projects/importitnew/includejar/poi-3.9-20121203.jar"
.FORMEL U|xtclasspathzeile4 = "java/projects/importitnew/includejar/poi-ooxml-3.9-20121203.jar"
.FORMEL U|xtclasspathzeile5 = "java/projects/importitnew/includejar/poi-ooxml-schemas-3.9-20121203.jar"
.FORMEL U|xtclasspathzeile6 = "java/projects/importitnew/includejar/xmlbeans-2.3.0.jar"
.FORMEL U|xtlogpropzeile = "log4j.logger.de.abaspro.infosystem.importit.Importit21=TRACE, de.abaspro.infosystem.importit.Importit21.RollingFile"
.FORMEL U|xtclasspathsich = U|xtclasspathdat + "_sich_" + 'T|sekundenz'
.FORMEL U|xtloggingpropsich = U|xtloggingpropdat + "_sich_" + 'T|sekundenz'
.DATEI -TEMPNAME U|xtgrepdatei
.DATEI -TEMPNAME U|xtgreplogdatei
..
..
.weiter EL005 ? _(F|filenotempty(U|xtjavadat))
.. IF005
..
.weiter EL006 ? _(_(F|filenotempty(U|xtclasspathzeile1)))
.. IF006
.FORMEL U|xtprojectspfad = "java/projects"
..
.FORMEL U|xtprojectpfad = "java/projects/importitnew"
..
..
.weiter EL007 ? _(_(F|fileexists(U|xtprojectspfad)))
.. IF007
.FORMEL U|xtsys = "mkdir " + U|xtprojectspfad
..
.SYSTEM 'U|xtsys' hinter
..
!EL007
.. FI007
..
..
.weiter EL008 ? _(_(F|fileexists(U|xtprojectpfad)))
.. IF008
.FORMEL U|xtsys = "mkdir " + U|xtprojectpfad
..
.SYSTEM 'U|xtsys' hinter
..
!EL008
.. FI008
..
..tgz - File entpacken importitnew21java.tgz
..
.FORMEL U|xtsys = "cd java/projects/;tar xvzf ../../" + 'U|xtjavadat'
..
.SYSTEM 'U|xtsys' hinter
..
..erstprÅfen und danach mandant.classpath erweitern
..
.FORMEL U|xizaehl = 1
..
..
!LOOP001: ==============================
.weiter ELOP001 ? _(U|xizaehl <= 6)
.FORMEL U|xtsys = "cd ~;grep "+ T|apostroph + U|xtclasspathzeile.U|xizaehl + T|apostroph + " java/mandant.classpath > " + U|xtgrepdatei
..
.SYSTEM 'U|xtsys' hinter
..
..
.weiter EL009 ? _(_(F|filenotempty(U|xtgrepdatei)))
.. IF009
.AUSGABE AUF 'U|xtgrepdatei'
..
.EIN DATEI.F
..
'U|xtclasspathzeile.U|xizaehl'
..
.AUSGABE
..
.FORMEL U|xtsys = "cat -u " + U|xtclasspathdat +" " + U|xtgrepdatei + " >" + U|xtclasspathsich + ";cp -f " + U|xtclasspathsich + " " + U|xtclasspathdat
..
.SYSTEM 'U|xtsys' hinter
..
.FORMEL U|xtsys = "rm " + U|xtgrepdatei
..
.SYSTEM 'U|xtsys' hinter
..
!EL009
.. FI009
..
.FORMEL U|xizaehl = U|xizaehl +1
..
.weiter LOOP001
!ELOP001: ==============================
..
..logging.properties ÅberprÅfen
..
.FORMEL U|xtsys = "cd ~;grep "+ T|apostroph + U|xtlogpropzeile + T|apostroph + " " + xtloggingpropdat + "  >" + U|xtgreplogdatei
..
.SYSTEM 'U|xtsys' hinter
..
..
.weiter EL010 ? _(_(F|filenotempty(U|xtgreplogdatei)))
.. IF010
.AUSGABE AUF 'U|xtgreplogdatei'
..
.EIN DATEI.F
..

# logging for IMPORTIT21
..
log4j.logger.de.abaspro.infosystem.importit.Importit21=TRACE, de.abaspro.infosystem.importit.Importit21.RollingFile
log4j.appender.de.abaspro.infosystem.importit.Importit21.RollingFile=org.apache.log4j.RollingFileAppender
log4j.appender.de.abaspro.infosystem.importit.Importit21.RollingFile.File=java/log/importit21.log
log4j.appender.de.abaspro.infosystem.importit.Importit21.RollingFile.Append=true
log4j.appender.de.abaspro.infosystem.importit.Importit21.RollingFile.MaxBackupIndex=10
log4j.appender.de.abaspro.infosystem.importit.Importit21.RollingFile.layout=org.apache.log4j.PatternLayout
log4j.appender.de.abaspro.infosystem.importit.Importit21.RollingFile.MaxFileSize=5MB
log4j.appender.de.abaspro.infosystem.importit.Importit21.RollingFile.layout.ConversionPattern=[%X{USER_CODE}:%X{CALLER_ID}] %d{dd.MMM.yyyy HH:mm} %7r %-5p - %m%n
..
.AUSGABE
..
.FORMEL U|xtsys = "cat -u " + U|xtloggingpropdat +" " + U|xtgreplogdatei + " >" + U|xtloggingpropsich + ";cp -f " + U|xtloggingpropsich + " " + U|xtloggingpropdat
..
.SYSTEM 'U|xtsys' hinter
..
!EL010
.. FI010
..
.FORMEL U|xtkommd = "<infosystem>IMPORTIT21<zeigen> ? bugenclass=1|[invisible]=1"
..
.KOMMANDO -WARTEN 'U|xtkommd'
..
.FORMEL U|xtsel = "$,,such==JSADMIN"
..
.LAD 1 Infosystem 'U|xtsel'
..
..
.weiter EL011 ? _(mehr)
.. IF011
.box
Bitte alle Jfopsserver Instanzen beenden, damit die neuen Klassen berÅcksichtigt werden.
..
..
.FORMEL U|xtkommd = "<infosystem>JSADMIN <hole> ? bstart=1
..
.KOMMANDO -WARTEN 'U|xtkommd'
..
.weiter FI011
!EL011
.FORMEL U|xtsys = "jfopserver_shutdown.sh"
..
.SYSTEM 'U|xtsys' hinter
..
!FI011
..
!EL006
.. FI006
..
!EL005
.. FI005
..
.DATEI -TEMPNAME U|xtdatei
..
.FORMEL U|xtsys = "for i in `mdir.sh` ; do cd $i ; envmake -x $i -q MNAME -q MANDANTDIR -q MANDANT ; done  |grep " + E|MANDANT + " > " + U|xtdatei
.SYSTEM 'U|xtsys' hinter
..
..
.weiter EL012 ? _(F|filenotempty(U|xtdatei))
.. IF012
.DATEI -OEFFNEN xidat 'U|xtdatei'
..
..
.weiter EL013 ? _(mehr)
.. IF013
.DATEI -LESEN xidat xmandant # xttest^
..
..
.weiter EL014 ? _(mehr)
.. IF014
.FORMEL M|ymandant = U|xmandant
..
.FORMEL M|yeigmandant = U|xmandant
..
!EL014
.. FI014
..
!EL013
.. FI013
..
!EL012
.. FI012
..
.FORMEL   M|yserver= 'E|EDPHOST'
.FORMEL  M|yport='E|EDPPORT'
..
..
.weiter EL015 ? _(F|empty(M|ymandant))
.. IF015
.FORMEL  M|ymandant= E|MANDANT
..
!EL015
.. FI015
..
..
.weiter EL016 ? _(_(xyservice))
.. IF016
.SCHUTZ yserver 0
.SCHUTZ yport 0
.SCHUTZ ymandant 0
..
!EL016
.. FI016
..
!EL004
.. FI004
..
!ESAC001: =====   ENDCASE   =====
..
